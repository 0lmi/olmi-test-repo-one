name: Call a reusable workflow

on:
  push:
    branches: [ main ]


env:
  MENDER_ARTIFACTS_CI_ARTIFACT_NAME: mender-artifacts
  MENDER_ARTIFACTS_CI_ARTIFACT_PATH: mender-artifacts
  MENDER_ARTIFACT_NAME: artifact.mender
  MENDER_SERVER_URL: https://hosted.mender.io
  MENDER_DEPLOYMENT_DEVICES_GROUP_DEV: grp-1
  MENDER_DEPLOYMENT_DEVICES_GROUP_PROD: grp-2

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: mendersoftware/mender-ci-tools:men-5906_build_and_publish_mender-ci-tools_image_e018e952a4e9a71c318bf2a56651293efff5d8b5
    steps:
      - uses: actions/checkout@v2
      - name: Generrate Mender Release Name
        run: |
          [ ! -d ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH} ] && mkdir -p ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}
          APP_NAME=change-the-world-to-better
          VERSION="$(($RANDOM%9+1)).$(($RANDOM%9+1)).$(($RANDOM%9+1))"
          MENDER_RELEASE_NAME=${APP_NAME}_v${VERSION}
          echo "MENDER_RELEASE_NAME=${MENDER_RELEASE_NAME}" | tee ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/MENDER_RELEASE_NAME.env ${GITHUB_ENV}
      - name: Choose Mender Deployment Group
        run: |
          if [[ "${GITHUB_REF_NAME}" == "prod" ]]; then
            MENDER_DEPLOYMENT_DEVICES_GROUP=${MENDER_DEPLOYMENT_DEVICES_GROUP_PROD}
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            MENDER_DEPLOYMENT_DEVICES_GROUP=${MENDER_DEPLOYMENT_DEVICES_GROUP_DEV}
          else
            echo "ERROR: workflow execution on not supported branch"
            exit 1
          fi
          echo "MENDER_DEPLOYMENT_DEVICES_GROUP=${MENDER_DEPLOYMENT_DEVICES_GROUP}" > ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/MENDER_DEPLOYMENT_DEVICES_GROUP.env
      - name: Generate Mender Deployment Name
        run: |
          COMMIT_SHORT_SHA="${GITHUB_SHA:0:8}"
          MENDER_DEPLOYMENT_NAME=${MENDER_RELEASE_NAME}_${COMMIT_SHORT_SHA}
          echo "MENDER_DEPLOYMENT_NAME=${MENDER_DEPLOYMENT_NAME}" > ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/MENDER_DEPLOYMENT_NAME.env
      - name: Create Mender Artifact
        run: |
          echo /home/root/.ssh > dest_dir
          echo authorized_keys > filename
          echo key > authorized_keys
          mender-artifact write module-image \
            -T single-file \
            --device-type raspberrypi4 \
            -o ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/${MENDER_ARTIFACT_NAME} \
            -n ${MENDER_RELEASE_NAME} \
            --software-name authorized_keys \
            --software-version 1.0 \
            -f dest_dir \
            -f filename \
            -f authorized_keys
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_NAME }}
          path: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_PATH }}

  publish:
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_NAME }}
          path: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_PATH }}
      - name: Upload Mender Artifacts to Server
        uses: 0lmi/mender-push-artifact@main
        with:
          mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
          mender_artifact: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_PATH }}/${{ env.MENDER_ARTIFACT_NAME }}
          mender_uri: ${{ env.MENDER_SERVER_URL }}

  deploy:
    needs: ["publish"]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_NAME }}
          path: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_PATH }}
      - name: Set Environment Variables
        run: |
          for file in $(ls ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/*.env); do
            for var in $(cat ${file}); do
              echo ${var} >> ${GITHUB_ENV}
            done
          done
      - name: Create Deployment on Mender Server
        uses: 0lmi/mender-create-deployment@basic_action_implementation
        with:
          mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
          mender_uri: ${{ env.MENDER_SERVER_URL }}
          mender_deployment_name: ${{ env.MENDER_DEPLOYMENT_NAME }}
          mender_release_name: ${{ env.MENDER_RELEASE_NAME }}
          mender_devices_group: ${{ env.MENDER_DEPLOYMENT_DEVICES_GROUP }}
