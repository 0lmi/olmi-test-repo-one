name: Build and Deploy Two Mender Artifacts

on:
  push:
    branches:
      - main

env:
  MENDER_ARTIFACTS_CI_ARTIFACT_PATH: mender-artifast
  MENDER_DEPLOYMENT_DEVICES_GROUP_PREFIX: group-dev
  MENDER_SERVER_URL: https://hosted.mender.io

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ["sensor", "executive"]
    container:
      image: mendersoftware/mender-ci-tools:men-5906_build_and_publish_mender-ci-tools_image_5b8f51afb7ffab3ea7d3d433bcd5115463ae08fa
    steps:
      - uses: actions/checkout@v2
      - name: Generrate Mender Release Name
        run: |
          APP_NAME=change-the-world-to-better
          VERSION="$(($RANDOM%9+1)).$(($RANDOM%9+1)).$(($RANDOM%9+1))"
          MENDER_RELEASE_NAME=${APP_NAME}_v${VERSION}
          echo "MENDER_RELEASE_NAME=${MENDER_RELEASE_NAME}" >> ${GITHUB_ENV}
      - name: Generate Mender Deployment Name
        run: |
          COMMIT_SHORT_SHA="${GITHUB_SHA:0:8}"
          MENDER_DEPLOYMENT_NAME=${{ matrix.device }}_${MENDER_RELEASE_NAME}_${COMMIT_SHORT_SHA}
          echo "MENDER_DEPLOYMENT_NAME=${MENDER_DEPLOYMENT_NAME}" >> ${GITHUB_ENV}
      - name: Create Mender Artifact
        run: |
          [ ! -d ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH} ] && mkdir -p ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}
          MENDER_ARTIFACT_NAME=artifact_$(( $RANDOM % 9999 + 1000 )).mender
          echo /home/root/.ssh > dest_dir
          echo authorized_keys > filename
          echo key > authorized_keys
          SOFTWARE_NAME=${{ matrix.device }}
          SOFTWARE_VERSION="$(($RANDOM%9+1)).$(($RANDOM%9+1))"
          mender-artifact write module-image \
            -T single-file \
            --device-type raspberrypi4 \
            -o ${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/${MENDER_ARTIFACT_NAME} \
            -n ${MENDER_RELEASE_NAME} \
            --software-name ${SOFTWARE_NAME} \
            --software-version ${SOFTWARE_VERSION} \
            -f dest_dir \
            -f filename \
            -f authorized_keys
          echo "MENDER_ARTIFACT_NAME=${MENDER_ARTIFACT_NAME}" >> ${GITHUB_ENV}
      - name: test
        shell: sh
        run: |
          echo "MENDER_ARTIFACT_NAME=${MENDER_ARTIFACT_NAME}"
          echo "MENDER_SERVER_URL=${MENDER_SERVER_URL}"
          #ls -l ${GITHUB_WORKSPACE}/${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/${MENDER_ARTIFACT_NAME}
          #curl -s -X POST ${MENDER_SERVER_URL}/api/management/v1/deployments/artifacts \
          #-H "Content-Type: multipart/form-data" \
          #-H "Accept: application/json" \
          #-H "Authorization: Bearer ${{ inputs.mender_pat }}" \
          #-F artifact=@${GITHUB_WORKSPACE}/${MENDER_ARTIFACTS_CI_ARTIFACT_PATH}/${MENDER_ARTIFACT_NAME}
          #if [[ ! -z "$RESPONSE" || "$RESPONSE" != "" ]]; then
          #  if $(echo ${RESPONSE} | grep -q "An artifact with the same name has conflicting depends"); then
          #    echo "WARN: artifact ${{ inputs.mender_artifact }} already exists on the server ${{ inputs.mender_uri }}, upload is skipped"
          #    echo "Server's response: ${RESPONSE}"
          #    exit 0
          #  else
          #    echo "ERROR: failed to upload artifact ${{ inputs.mender_artifact }} to ${{ inputs.mender_uri }}"
          #    echo "Server's response: ${RESPONSE}"
          #    exit 1
          #  fi
          #fi
          echo "INFO: artifact ${{ inputs.mender_artifact }} successfully uploaded to ${{ inputs.mender_uri }}"
      - name: Upload Mender Artifacts to Server
        uses: 0lmi/mender-push-artifact@main
        with:
          mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
          mender_artifact: ${{ env.MENDER_ARTIFACTS_CI_ARTIFACT_PATH }}/${{ env.MENDER_ARTIFACT_NAME }}
          mender_uri: ${{ env.MENDER_SERVER_URL }}
      - name: Create Deployment on Mender Server
        uses: 0lmi/mender-create-deployment@basic_action_implementation
        with:
          mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
          mender_uri: ${{ env.MENDER_SERVER_URL }}
          mender_deployment_name: ${{ env.MENDER_DEPLOYMENT_NAME }}
          mender_release_name: ${{ env.MENDER_RELEASE_NAME }}
          mender_devices_group: ${{ env.MENDER_DEPLOYMENT_DEVICES_GROUP_PREFIX }}-${{ matrix.device }}

